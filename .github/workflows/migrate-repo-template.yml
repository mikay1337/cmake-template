
name: Migrate Repo Template

on:
  pull_request:
  release:
    types: [published]
  push:
    branches:
      - main
      - develop

permissions:
  contents: write

jobs:
  migrate_repo_template:
    name: Run Migration
    runs-on: ubuntu-latest
    if: github.repository != 'mikay1337/cmake-template'
    steps:

      - name: Checkout project sources
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Migrate
        env:
          GITHUB_REPOSITORY_OLD: "mikay1337/cmake-template"
          GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY_URL: ${{ github.repositoryUrl }}
        run: |
          # gradle files
          ## gradle.properties - initial version 
          echo "version=0.0.1-SNAPSHOT" > gradle.properties

          # README from template
          mv -f .github/template/README.md README.md
          sed -i "s@%%OWNER_NAME%%@$GITHUB_REPOSITORY_OWNER@g" README.md
          sed -i "s@%%REPO_NAME%%@$GITHUB_REPOSITORY_NAME@g" README.md
          sed -i "s@%%REPO_URL%%@$GITHUB_REPOSITORY_URL@g" README.md
          
          # move GitHub Actions workflows
          mv -f .github/template/*.yml .github/workflows/

          # cleanup this very GitHub Actions workflow yml
          rm .github/workflows/migrate-repo-template.yml

          #remove template files
          rm -Rf .github/template/

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git status
          git commit -m "chore: INITIAL Migrate Repo Template"

      # Push changes 
      - name: Push changes
        run: |
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN_WITH_WORKFLOW_SCOPE }}

      # Create develop branch if not exists
      - name: Create develop branch if not exists
        run: |
          if ! git ls-remote --heads origin develop | grep develop; then
            git checkout -b develop
            git push origin develop
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN_WITH_WORKFLOW_SCOPE }}